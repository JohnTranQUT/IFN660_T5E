#include "RuntimeLib.h"
void main() {
	auto LE1 = NewGlobalEnvironment(new ObjectType(), new ObjectType());
	auto R1 = new StringType("z");
	auto R2 = LE1->_getEnvRec()->CreateMutableBinding(R1, new BooleanType(false));
	auto R3 = new NumberType(42);
	auto R4 = new StringType("x");
	auto R5 = ResolveBinding(R4, LE1);
	auto R6 = SimpleAssignmentOperator(R5, R3);
	auto R7 = new NumberType(1);
	auto R8 = new StringType("x");
	auto R9 = ResolveBinding(R8, LE1);
	auto R10 = AdditionOperator(R9, R7);
	auto R11 = new StringType("y");
	auto R12 = ResolveBinding(R11, LE1);
	auto R13 = SimpleAssignmentOperator(R12, R10);
	auto R14 = new StringType("z");
	auto R15 = ResolveBinding(R14, LE1);
	auto R16 = InitializeReferencedBinding(R15, new UndefinedType());
	auto R17 = new BooleanType(false);
	auto R18 = new StringType("y");
	auto R19 = ResolveBinding(R18, LE1);
	auto R20 = UnaryMINUSOperator(R19);
	auto R21 = new StringType("x");
	auto R22 = ResolveBinding(R21, LE1);
	auto R23 = GreaterThanOperator(R22, R20);
	auto R24 = new StringType("z");
	auto R25 = ResolveBinding(R24, LE1);
	auto R26 = LogicalNOTOperator(R25);
	auto R27 = LogicalANDOperator(R26, R23);
	auto R28 = LogicalOROperator(R27, R17);
	auto R29 = ToBoolean(_ToLanguageType(GetValue(R28)));
	if (R29->_getValue()) {
		auto LE2 = NewDeclarativeEnvironment(LE1);
		auto R30 = new StringType("x");
		auto R31 = LE2->_getEnvRec()->CreateMutableBinding(R30, new BooleanType(false));
		auto R32 = new NumberType(0);
		auto R33 = new StringType("x");
		auto R34 = ResolveBinding(R33, LE2);
		auto R35 = InitializeReferencedBinding(R34, R32);
		auto R36 = new NullType();
		auto R37 = new StringType("x");
		auto R38 = ResolveBinding(R37, LE2);
		auto R39 = PrefixIncrementOperator(R38);
		auto R40 = LogicalOROperator(R39, R36);
		auto R41 = new StringType("y");
		auto R42 = ResolveBinding(R41, LE2);
		auto R43 = SimpleAssignmentOperator(R42, R40);
		auto R44 = new StringType("y");
		auto R45 = ResolveBinding(R44, LE2);
		auto R46 = PostfixDecrementOperator(R45);
		auto R47 = ToBoolean(_ToLanguageType(GetValue(R46)));
		if (R47->_getValue()) {
			auto LE3 = NewDeclarativeEnvironment(LE2);
			auto R48 = new StringType("x");
			auto R49 = LE3->_getEnvRec()->CreateMutableBinding(R48, new BooleanType(false));
			auto R50 = new StringType("x");
			auto R51 = new StringType("y");
			auto R52 = LE3->_getEnvRec()->CreateMutableBinding(R51, new BooleanType(false));
			auto R53 = new StringType("IFN");
			auto R54 = new StringType("x");
			auto R55 = ResolveBinding(R54, LE3);
			auto R56 = InitializeReferencedBinding(R55, R53);
			auto R57 = new NumberType(660);
			auto R58 = new StringType("x");
			auto R59 = ResolveBinding(R58, LE3);
			auto R60 = AdditionOperator(R59, R57);
			auto R61 = new StringType("y");
			auto R62 = ResolveBinding(R61, LE3);
			auto R63 = InitializeReferencedBinding(R62, R60);
			auto R64 = new StringType("Layer 3 - IfStatement");
			auto R65 = _log(R64);
			auto R66 = new StringType("x");
			auto R67 = ResolveBinding(R66, LE3);
			auto R68 = _log(R67);
			auto R69 = new StringType("y");
			auto R70 = ResolveBinding(R69, LE3);
			auto R71 = _log(R70);
		} else {
			auto LE4 = NewDeclarativeEnvironment(LE2);
			auto R72 = new StringType("y");
			auto R73 = LE4->_getEnvRec()->CreateMutableBinding(R72, new BooleanType(false));
			auto R74 = new NumberType(43);
			auto R75 = new StringType("y");
			auto R76 = ResolveBinding(R75, LE4);
			auto R77 = InitializeReferencedBinding(R76, R74);
			auto R78 = new StringType("Layer 3 - ElseStatement");
			auto R79 = _log(R78);
			auto R80 = new StringType("x");
			auto R81 = ResolveBinding(R80, LE4);
			auto R82 = _log(R81);
			auto R83 = new StringType("y");
			auto R84 = ResolveBinding(R83, LE4);
			auto R85 = _log(R84);
		}
		auto R86 = new StringType("Layer 2");
		auto R87 = _log(R86);
		auto R88 = new StringType("x");
		auto R89 = ResolveBinding(R88, LE2);
		auto R90 = _log(R89);
		auto R91 = new StringType("y");
		auto R92 = ResolveBinding(R91, LE2);
		auto R93 = _log(R92);
	}
	auto R94 = new StringType("Root");
	auto R95 = _log(R94);
	auto R96 = new StringType("x");
	auto R97 = ResolveBinding(R96, LE1);
	auto R98 = _log(R97);
	auto R99 = new StringType("y");
	auto R100 = ResolveBinding(R99, LE1);
	auto R101 = _log(R100);
}
